version: '3.9'

services:
  app:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: on-failure

  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
    command: ["pytest", "tests"]

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: research_users
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
  postgres_data:
